.TH al_fopen_slice 3 "" "Allegro reference manual"
.SH NAME
.PP
al_fopen_slice - Allegro 5 API
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <allegro5/allegro.h>

ALLEGRO_FILE\ *al_fopen_slice(ALLEGRO_FILE\ *fp,\ size_t\ initial_size,\ const\ char\ *mode)
\f[]
.fi
.SH DESCRIPTION
.PP
Opens a slice (subset) of an already open random access file as if it
were a stand alone file.
While the slice is open, the parent file handle must not be used in any
way.
.PP
The slice is opened at the current location of the parent file, up
through \f[C]initial_size\f[] bytes.
The \f[C]initial_size\f[] may be any non-negative integer that will not
exceed the bounds of the parent file.
.PP
Seeking with \f[C]ALLEGRO_SEEK_SET\f[] will be relative to this starting
location.
\f[C]ALLEGRO_SEEK_END\f[] will be relative to the starting location plus
the size of the slice.
.PP
The mode can be any combination of:
.IP \[bu] 2
r: read access
.IP \[bu] 2
w: write access
.IP \[bu] 2
e: expandable
.PP
For example, a mode of "rw" indicates the file can be read and written.
(Note that this is slightly different from the stdio modes.)
 Keep in mind that the parent file must support random access and be
open in normal write mode (not append) for the slice to work in a well
defined way.
.PP
If the slice is marked as expandable, then reads and writes can happen
after the initial end point, and the slice will grow accordingly.
Otherwise, all activity is restricted to the initial size of the slice.
.PP
A slice must be closed with al_fclose(3).
The parent file will then be positioned immediately after the end of the
slice.
.SH SINCE
.PP
5.0.6, 5.1.0
.SH SEE ALSO
.PP
al_fopen(3)
