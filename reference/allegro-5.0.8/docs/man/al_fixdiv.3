.TH al_fixdiv 3 "" "Allegro reference manual"
.SH NAME
.PP
al_fixdiv - Allegro 5 API
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <allegro5/allegro.h>

al_fixed\ al_fixdiv(al_fixed\ x,\ al_fixed\ y);
\f[]
.fi
.SH DESCRIPTION
.PP
A fixed point value can be divided by an integer with the normal
\f[C]/\f[] operator.
To divide two fixed point values, though, you must use this function.
If a division by zero occurs, Allegro\[aq]s errno will be set and the
maximum possible value will be returned, but errno is not cleared if the
operation is successful.
This means that if you are going to test for division by zero you should
call \f[C]al_set_errno(0)\f[] before calling al_fixdiv(3).
.PP
Example:
.IP
.nf
\f[C]
\ \ \ \ al_fixed\ result;

\ \ \ \ /*\ This\ will\ put\ 0.06060\ `result\[aq].\ */
\ \ \ \ result\ =\ al_fixdiv(al_itofix(2),\ al_itofix(33));

\ \ \ \ /*\ This\ will\ put\ 0\ into\ `result\[aq].\ */
\ \ \ \ result\ =\ al_fixdiv(0,\ al_itofix(-30));

\ \ \ \ /*\ Sets\ errno\ and\ puts\ -32768\ into\ `result\[aq].\ */
\ \ \ \ result\ =\ al_fixdiv(al_itofix(-100),\ al_itofix(0));
\ \ \ \ assert(!al_get_errno());\ /*\ This\ will\ fail.\ */
\f[]
.fi
.SH RETURN VALUE
.PP
Returns the result of dividing \f[C]x\f[] by \f[C]y\f[].
If \f[C]y\f[] is zero, returns the maximum possible fixed point value
and sets Allegro\[aq]s errno to ERANGE.
.SH SEE ALSO
.PP
al_fixadd(3), al_fixsub(3), al_fixmul(3), al_get_errno(3).
