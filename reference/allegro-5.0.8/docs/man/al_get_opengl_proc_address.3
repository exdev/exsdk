.TH al_get_opengl_proc_address 3 "" "Allegro reference manual"
.SH NAME
.PP
al_get_opengl_proc_address - Allegro 5 API
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <allegro5/allegro_opengl.h>

void\ *al_get_opengl_proc_address(const\ char\ *name)
\f[]
.fi
.SH DESCRIPTION
.PP
Helper to get the address of an OpenGL symbol
.PP
Example:
.PP
How to get the function \f[I]glMultiTexCoord3fARB\f[] that comes with
ARB\[aq]s Multitexture extension:
.IP
.nf
\f[C]
//\ define\ the\ type\ of\ the\ function
\ \ \ ALLEGRO_DEFINE_PROC_TYPE(void,\ MULTI_TEX_FUNC,
\ \ \ \ \ \ (GLenum,\ GLfloat,\ GLfloat,\ GLfloat));
//\ declare\ the\ function\ pointer
\ \ \ MULTI_TEX_FUNC\ glMultiTexCoord3fARB;
//\ get\ the\ address\ of\ the\ function
\ \ \ glMultiTexCoord3fARB\ =\ (MULTI_TEX_FUNC)\ al_get_opengl_proc_address(
\ \ \ \ \ \ "glMultiTexCoord3fARB");
\f[]
.fi
.PP
If \f[I]glMultiTexCoord3fARB\f[] is not NULL then it can be used as if
it has been defined in the OpenGL core library.
.RS
.PP
\f[I]Note:\f[] Under Windows, OpenGL functions may need a special
calling convention, so it\[aq]s best to always use the
ALLEGRO_DEFINE_PROC_TYPE macro when declaring function pointer types for
OpenGL functions.
.RE
.PP
Parameters:
.PP
name - The name of the symbol you want to link to.
.SH RETURN VALUE
.PP
A pointer to the symbol if available or NULL otherwise.
