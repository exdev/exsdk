.TH al_draw_bitmap 3 "" "Allegro reference manual"
.SH NAME
.PP
al_draw_bitmap - Allegro 5 API
.SH SYNOPSIS
.IP
.nf
\f[C]
#include\ <allegro5/allegro.h>

void\ al_draw_bitmap(ALLEGRO_BITMAP\ *bitmap,\ float\ dx,\ float\ dy,\ int\ flags)
\f[]
.fi
.SH DESCRIPTION
.PP
Draws an unscaled, unrotated bitmap at the given position to the current
target bitmap (see al_set_target_bitmap(3)).
.PP
\f[C]flags\f[] can be a combination of:
.IP \[bu] 2
ALLEGRO_FLIP_HORIZONTAL - flip the bitmap about the y-axis
.IP \[bu] 2
ALLEGRO_FLIP_VERTICAL - flip the bitmap about the x-axis
.RS
.PP
\f[I]Note:\f[] The current target bitmap must be a different bitmap.
Drawing a bitmap to itself (or to a sub-bitmap of itself) or drawing a
sub-bitmap to its parent (or another sub-bitmap of its parent) are not
currently supported.
To copy part of a bitmap into the same bitmap simply use a temporary
bitmap instead.
.RE
.RS
.PP
\f[I]Note:\f[] The backbuffer (or a sub-bitmap thereof) can not be
transformed, blended or tinted.
If you need to draw the backbuffer draw it to a temporary bitmap first
with no active transformation (except translation).
Blending and tinting settings/parameters will be ignored.
This does not apply when drawing into a memory bitmap.
.RE
.SH SEE ALSO
.PP
al_draw_bitmap_region(3), al_draw_scaled_bitmap(3),
al_draw_rotated_bitmap(3), al_draw_scaled_rotated_bitmap(3)
